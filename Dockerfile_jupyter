FROM ghcr.io/seisscoped/container-base:ubuntu22.04_jupyterlab
# FROM ghcr.io/seisscoped/container-base:centos7_jupyterlab
# FROM python:3.7


# Prevents Python from writing pyc files.
ENV PYTHONDONTWRITEBYTECODE=1

# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

WORKDIR /app
RUN git clone --depth 1 https://github.com/kaiwenwang233/scoped_ML_tutorial.git .

# RUN pip install git+https://github.com/kaiwenwang233/scoped_ML_tutorial.git
# COPY requirements.txt /app
# RUN pip install -r /app/requirements.txt 

RUN pip install git+https://github.com/wayneweiqiang/GaMMA.git \
    && docker-clean
COPY . /app


RUN apt update -y && \
    apt install -y gcc gfortran gdb make && \
    pip install -r /app/requirements.txt && \
    cd /app/hypoInv/source && \
    make \
    && docker-clean

ARG TARGETARCH

RUN if [ "$TARGETARCH" == "arm64" ]; then pip install torch torchvision; fi \
    && if [ "$TARGETARCH" == "amd64" ]; then pip install torch==1.11.0+cpu torchvision==0.12.0+cpu -f https://download.pytorch.org/whl/torch_stable.html; fi \ 
    && docker-clean

RUN cd /app && \
    git clone --depth 1 http://github.com/fwaldhauser/HypoDD.git && \
    cd HypoDD && \
    # rm -r example.Amatrice/* && rmdir example.Amatrice &&\
    cd src && \
    make all && \
    cp ph2dt/ph2dt /usr/bin/ && \
    cp hypoDD/hypoDD /usr/bin/ && \
    cp hista2ddsta/hista2ddsta /usr/bin/ && \
    mv /app/HypoDD /app/hypodd/source && \
    docker-clean

RUN cd /app/cc/amatrice/preprocess/preprocess && \
    cp Makefile.Pwaves Makefile && \
    make && \
    cp Makefile.Swaves Makefile && \
    make && \
    cd /app/cc/amatrice/correl/correl && \
    cp Makefile.amatrice.Pwaves Makefile && \
    make && \
    cp Makefile.amatrice.Swaves Makefile && \
    make && \
    cd ../runs && \
    cc -o select5 select5.c -lm 
RUN add-apt-repository universe && \
    apt update && \
    apt install csh

USER root
# add all the stuff to change permissions
RUN mkdir ~/.local && \
    sudo chmod -R 777 ~/.local && \
    sudo chmod -R 777 /app

# Expose the port that the application listens on.
EXPOSE 8888

WORKDIR /app
# # Run the notebook.
CMD ["jupyter", "lab", "--port=8888", "--ip=0.0.0.0", "--allow-root"]


