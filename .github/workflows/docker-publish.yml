name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  repository_dispatch:
    types: [build_container]
  schedule:
    - cron: '21 21 * * 5'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  # CHANGE THE IMAGE NAME HERE
  IMAGE_NAME: seisscoped/ml_catalog

jobs:
  build-ubuntu-jupyterlab:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup for Multi-platform image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache-jupyterlab
          key: ${{ runner.os }}-buildx-ubuntujupyterlab-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ubuntujupyterlab-
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=true
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      # Build and push ubuntu JupyterLab image
      - name: Build and push Ubuntu JupyterLab image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile_jupyter
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:ubuntu22.04_jupyterlab
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ubuntu22.04_jupyterlab
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-jupyterlab
          cache-to: type=local,dest=/tmp/.buildx-cache-jupyterlab-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-jupyterlab
          mv /tmp/.buildx-cache-jupyterlab-new /tmp/.buildx-cache-jupyterlab
